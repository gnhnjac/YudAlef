%DEFINE pushbxcx 0x5153
%DEFINE callsp 0xD4FF
start:
stosw
mov si, ax
add ax, jmp_here
mov word[si+mem], ax
add si, zombie_code-start
push ds
pop es
std
mov dx, 0xC681
mov cx, 0x26FF
mov ax, 0x5ECC
mov [0x206], si
int 87h
push cs
pop ss
mov sp, si
sub sp, zombie_code-start
jmp jmp_here
zombie_code:
mov si, [0x206]
mov bx, ax
mov byte[bx+11], 0
mov ax, 0x5ECC
mov dx, 0xC681
mov cx, 0x26FF
push ds
pop es
std
int 87h
push cs
pop ss
mov sp, bx
jmp_here:
mov bp, sp
cmp byte[bp-4], 0x69
jnz call_lbl
sub sp, end_mem-jmp_here+35
call_lbl:
call far [si+mem-zombie_code]
call_far_end:
mem:
dw 0xCCCC
dw 0x1000
end_mem:
dw 0x6969
dw 0x6969